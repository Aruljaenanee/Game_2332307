/* Quiz Game - Kid-Friendly CSS with animations and playful theme */

/* Base styles and reset */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Comic Sans MS", "Chalkboard SE", "Bubblegum Sans", cursive;
}

body {
  background: linear-gradient(135deg, #43cea2 0%, #185a9d 100%);
  min-height: 100vh;
  overflow-x: hidden;
  position: relative;
}

/* Animated background elements */
body::before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="20" cy="20" r="3" fill="%23ffffff22"/><circle cx="40" cy="70" r="4" fill="%23ffffff22"/><circle cx="65" cy="10" r="5" fill="%23ffffff22"/><circle cx="90" cy="50" r="3" fill="%23ffffff22"/><circle cx="10" cy="90" r="5" fill="%23ffffff22"/><path d="M80,80l-5,-5l5,-5" stroke="%23ffffff22" fill="none" stroke-width="1"/></svg>');
  background-size: 300px 300px;
  animation: floatingShapes 60s linear infinite;
  pointer-events: none;
  z-index: 1;
}

@keyframes floatingShapes {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 300px 300px;
  }
}

/* Header styles */
.header {
  display: flex;
  justify-content: space-between;
  padding: 15px;
  position: relative;
  z-index: 10;
}

/* Main container */
.container {
  max-width: 900px;
  margin: 10px auto 30px;
  padding: 20px;
  position: relative;
  z-index: 10;
}

/* Game content area */
.game-content {
  background-color: rgba(255, 255, 255, 0.9);
  border-radius: 20px;
  padding: 25px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2),
    0 0 20px rgba(255, 255, 255, 0.5) inset;
  animation: bounceIn 0.8s;
  position: relative;
  overflow: hidden;
}

@keyframes bounceIn {
  0% {
    transform: scale(0.3);
    opacity: 0;
  }
  50% {
    transform: scale(1.05);
  }
  70% {
    transform: scale(0.9);
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

/* Rainbow border effect */
.game-content::before {
  content: "";
  position: absolute;
  top: -5px;
  left: -5px;
  right: -5px;
  bottom: -5px;
  background: linear-gradient(
    45deg,
    #ff0000,
    #ff7f00,
    #ffff00,
    #00ff00,
    #0000ff,
    #4b0082,
    #8b00ff,
    #ff0000,
    #ff7f00,
    #ffff00,
    #00ff00,
    #0000ff,
    #4b0082,
    #8b00ff
  );
  z-index: -1;
  border-radius: 25px;
  animation: animatedBorder 3s linear infinite;
  background-size: 400% 400%;
}

@keyframes animatedBorder {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* Quiz section styles */
.quiz-section {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
}

.quiz-image {
  width: 100%;
  max-width: 500px;
  border-radius: 15px;
  overflow: hidden;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  transform-style: preserve-3d;
  perspective: 1000px;
}

.quiz-image img {
  width: 100%;
  height: auto;
  display: block;
  transition: transform 0.5s;
  animation: imageAppear 1s;
}

@keyframes imageAppear {
  0% {
    opacity: 0;
    transform: rotateY(90deg);
  }
  100% {
    opacity: 1;
    transform: rotateY(0);
  }
}

.quiz-image:hover img {
  transform: scale(1.02);
}

/* Input group styles */
.input-group {
  display: flex;
  width: 100%;
  max-width: 500px;
  gap: 10px;
  margin-top: 10px;
}

.answer-input {
  flex: 1;
  padding: 12px 20px;
  border: 3px solid #6c5ce7;
  border-radius: 50px;
  font-size: 1.1rem;
  transition: all 0.3s;
  box-shadow: 0 3px 10px rgba(108, 92, 231, 0.2);
}

.answer-input:focus {
  outline: none;
  border-color: #fd79a8;
  box-shadow: 0 3px 15px rgba(253, 121, 168, 0.4);
  transform: translateY(-2px);
}

.answer-input::placeholder {
  color: #a29bfe;
}

/* Button styles */
.button {
  background-color: #6c5ce7;
  color: white;
  border: none;
  border-radius: 50px;
  padding: 12px 25px;
  font-size: 1.1rem;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.3s;
  box-shadow: 0 5px 15px rgba(108, 92, 231, 0.4);
  position: relative;
  overflow: hidden;
}

.button::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 5px;
  height: 5px;
  background: rgba(255, 255, 255, 0.5);
  opacity: 0;
  border-radius: 100%;
  transform: translate(-50%, -50%) scale(1);
  transition: all 0.5s;
}

.button:active::after {
  animation: ripple 0.8s ease-out;
}

@keyframes ripple {
  0% {
    transform: translate(-50%, -50%) scale(0);
    opacity: 1;
  }
  80% {
    transform: translate(-50%, -50%) scale(50);
    opacity: 0.5;
  }
  100% {
    transform: translate(-50%, -50%) scale(100);
    opacity: 0;
  }
}

.button:hover {
  background-color: #5649c0;
  transform: translateY(-3px);
  box-shadow: 0 8px 25px rgba(108, 92, 231, 0.6);
}

.button:active {
  transform: translateY(0);
}

/* Status panel styles */
.status-panel {
  display: flex;
  justify-content: space-around;
  margin-top: 30px;
  flex-wrap: wrap;
  gap: 15px;
}

.status-box {
  background: linear-gradient(135deg, #a1c4fd 0%, #c2e9fb 100%);
  padding: 15px 25px;
  border-radius: 15px;
  text-align: center;
  font-weight: bold;
  font-size: 1.2rem;
  min-width: 150px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  transition: all 0.3s;
  animation: floatUp 0.5s ease-out backwards;
}

.status-box:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
}

.status-box:nth-child(1) {
  background: linear-gradient(135deg, #fad0c4 0%, #ffd1ff 100%);
  animation-delay: 0.1s;
}

.status-box:nth-child(2) {
  background: linear-gradient(135deg, #fbc2eb 0%, #a6c1ee 100%);
  animation-delay: 0.2s;
}

.status-box:nth-child(3) {
  background: linear-gradient(135deg, #84fab0 0%, #8fd3f4 100%);
  animation-delay: 0.3s;
}

@keyframes floatUp {
  0% {
    transform: translateY(20px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

.status-box span {
  display: block;
  font-size: 1.8rem;
  margin-top: 5px;
  color: #6c5ce7;
  text-shadow: 1px 1px 0 rgba(255, 255, 255, 0.5);
}

/* Timer specific styles */
.timer {
  position: relative;
  overflow: hidden;
}

.timer #time {
  font-family: "Digital", "Courier New", monospace;
  animation: pulse 1s infinite alternate;
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(1.05);
  }
}

/* Special buttons */
.logout-button {
  background-color: #ff7675;
  color: white;
  border: none;
  border-radius: 50px;
  padding: 10px 20px;
  font-size: 1rem;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.3s;
  box-shadow: 0 3px 10px rgba(255, 118, 117, 0.4);
}

.logout-button:hover {
  background-color: #e06867;
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(255, 118, 117, 0.6);
}

#music-toggle-btn {
  background-color: #fdcb6e;
  box-shadow: 0 3px 10px rgba(253, 203, 110, 0.4);
}

#music-toggle-btn:hover {
  background-color: #e5b861;
  box-shadow: 0 5px 15px rgba(253, 203, 110, 0.6);
}

/* Modal styles */
.modal {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  z-index: 100;
  justify-content: center;
  align-items: center;
}

.modal-content {
  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
  padding: 30px;
  border-radius: 20px;
  text-align: center;
  max-width: 500px;
  width: 90%;
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
  animation: zoomIn 0.4s;
  transform-origin: center;
}

@keyframes zoomIn {
  0% {
    transform: scale(0.5);
    opacity: 0;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

.modal h2 {
  margin-bottom: 20px;
  color: #6c5ce7;
  font-size: 2rem;
  text-shadow: 1px 1px 0 rgba(255, 255, 255, 0.5);
}

.modal .button {
  margin: 10px;
  min-width: 120px;
}

.modal .button:nth-child(2) {
  background-color: #ff7675;
}

.modal .button:nth-child(3) {
  background-color: #fdcb6e;
}

.modal .button:nth-child(4) {
  background-color: #55efc4;
}

/* Game over modal custom styles */
#game-over-modal .modal-content {
  background: linear-gradient(135deg, #fccb90 0%, #d57eeb 100%);
}

/* Level up modal custom styles */
#level-modal .modal-content {
  background: linear-gradient(135deg, #84fab0 0%, #8fd3f4 100%);
}

/* Responsive design */
@media (max-width: 768px) {
  .container {
    padding: 10px;
  }

  .game-content {
    padding: 15px;
  }

  .status-panel {
    flex-direction: column;
    align-items: center;
  }

  .status-box {
    width: 100%;
    max-width: 300px;
  }

  .input-group {
    flex-direction: column;
  }

  .button {
    width: 100%;
  }
}

/* Add some fun stars that float around */
@keyframes floatingStar {
  0% {
    transform: translateY(0) rotate(0deg);
    opacity: 1;
  }
  100% {
    transform: translateY(-100vh) rotate(360deg);
    opacity: 0;
  }
}

.star {
  position: absolute;
  bottom: -20px;
  background-color: rgba(255, 255, 255, 0.7);
  clip-path: polygon(
    50% 0%,
    61% 35%,
    98% 35%,
    68% 57%,
    79% 91%,
    50% 70%,
    21% 91%,
    32% 57%,
    2% 35%,
    39% 35%
  );
  animation: floatingStar 15s linear infinite;
  z-index: 1;
  pointer-events: none;
}

/* Create 10 stars with different sizes and positions */
.container::after {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1;
}

.star:nth-child(1) {
  left: 10%;
  width: 15px;
  height: 15px;
  animation-duration: 15s;
  animation-delay: 0s;
}
.star:nth-child(2) {
  left: 20%;
  width: 10px;
  height: 10px;
  animation-duration: 12s;
  animation-delay: 1s;
}
.star:nth-child(3) {
  left: 30%;
  width: 20px;
  height: 20px;
  animation-duration: 18s;
  animation-delay: 3s;
}
.star:nth-child(4) {
  left: 40%;
  width: 12px;
  height: 12px;
  animation-duration: 14s;
  animation-delay: 5s;
}
.star:nth-child(5) {
  left: 50%;
  width: 18px;
  height: 18px;
  animation-duration: 16s;
  animation-delay: 2s;
}
.star:nth-child(6) {
  left: 60%;
  width: 14px;
  height: 14px;
  animation-duration: 13s;
  animation-delay: 4s;
}
.star:nth-child(7) {
  left: 70%;
  width: 22px;
  height: 22px;
  animation-duration: 20s;
  animation-delay: 0s;
}
.star:nth-child(8) {
  left: 80%;
  width: 16px;
  height: 16px;
  animation-duration: 17s;
  animation-delay: 1s;
}
.star:nth-child(9) {
  left: 90%;
  width: 11px;
  height: 11px;
  animation-duration: 11s;
  animation-delay: 3s;
}
.star:nth-child(10) {
  left: 95%;
  width: 25px;
  height: 25px;
  animation-duration: 22s;
  animation-delay: 5s;
}

/* Add confetti effect when answering correctly - will be triggered by JavaScript */
@keyframes confetti {
  0% {
    transform: translateY(0) rotateZ(0);
    opacity: 1;
  }
  100% {
    transform: translateY(100vh) rotateZ(360deg);
    opacity: 0;
  }
}

.confetti {
  position: fixed;
  width: 10px;
  height: 10px;
  opacity: 0;
  pointer-events: none;
  z-index: 1000;
}

/* Add sparkle to correct answers */
@keyframes sparkle {
  0% {
    transform: scale(0) rotate(0deg);
    opacity: 0;
  }
  50% {
    transform: scale(1) rotate(180deg);
    opacity: 1;
  }
  100% {
    transform: scale(0) rotate(360deg);
    opacity: 0;
  }
}

.sparkle {
  position: absolute;
  pointer-events: none;
  background-image: radial-gradient(
    circle,
    white 0%,
    rgba(255, 255, 255, 0) 70%
  );
  border-radius: 50%;
  opacity: 0;
}

/* Add animated character that reacts to game events */
.game-character {
  position: fixed;
  bottom: 20px;
  right: 20px;
  width: 100px;
  height: 100px;
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="50" cy="50" r="45" fill="%23fdcb6e"/><circle cx="35" cy="40" r="5" fill="%23333"/><circle cx="65" cy="40" r="5" fill="%23333"/><path d="M30,65 Q50,80 70,65" stroke="%23333" stroke-width="3" fill="none"/></svg>');
  background-size: contain;
  background-repeat: no-repeat;
  z-index: 50;
  transition: transform 0.3s;
  animation: characterFloat 3s infinite alternate ease-in-out;
}

@keyframes characterFloat {
  0% {
    transform: translateY(0) rotate(0deg);
  }
  100% {
    transform: translateY(-15px) rotate(5deg);
  }
}

/* Make the game react to correct/incorrect answers with these animations */
@keyframes correctAnswer {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
    background-color: rgba(46, 213, 115, 0.2);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes incorrectAnswer {
  0%,
  100% {
    transform: translateX(0);
  }
  20%,
  60% {
    transform: translateX(-5px);
  }
  40%,
  80% {
    transform: translateX(5px);
  }
}

.correct-answer {
  animation: correctAnswer 0.8s;
}

.incorrect-answer {
  animation: incorrectAnswer 0.5s;
}
